---
import Layout from "#/src/layouts/Layout.astro";
---

<Layout title="Home">
  <section class="m-8 flex gap-4">
    <div class="w-full mt-24">
      <div class="text-center">
        <h2
          class="block antialiased tracking-normal font-sans text-4xl leading-[1.3] text-inherit font-bold mb-4"
        >
          Sign In
        </h2>
        <p
          class="block antialiased font-sans text-blue-gray-900 text-lg font-normal"
        >
          Enter your email to Sign In.
        </p>
      </div>

      <form
        class="mt-8 mb-2 mx-auto w-80 max-w-80 lg:w-1/2"
        eaad0abf-d795-5b43-a8ad-eeb223fd3c20
      >
        <div class="mb-1 flex flex-col gap-6">
          <div class="relative w-full min-w-[200px] h-11">
            <input
              type="email"
              name="email"
              autofocus
              placeholder="name@mail.com"
              class="peer w-full h-full bg-transparent text-blue-gray-700 font-sans font-normal outline outline-0 focus:outline-0 disabled:bg-blue-gray-50 disabled:border-0 transition-all placeholder-shown:border placeholder-shown:border-blue-gray-200 placeholder-shown:border-t-blue-gray-200 border focus:border-2 border-t-transparent focus:border-t-transparent text-sm px-3 py-3 rounded-md border-blue-gray-200 focus:border-gray-900 !border-t-blue-gray-200 focus:!border-t-gray-900"
            />
            <label
              class="flex w-full h-full select-none pointer-events-none absolute left-0 font-normal !overflow-visible truncate peer-placeholder-shown:text-blue-gray-500 leading-tight peer-focus:leading-tight peer-disabled:text-transparent peer-disabled:peer-placeholder-shown:text-blue-gray-500 transition-all -top-1.5 peer-placeholder-shown:text-sm text-[11px] peer-focus:text-[11px] before:content[' '] before:block before:box-border before:w-2.5 before:h-1.5 before:mt-[6.5px] before:mr-1 peer-placeholder-shown:before:border-transparent before:rounded-tl-md before:border-t peer-focus:before:border-t-2 before:border-l peer-focus:before:border-l-2 before:pointer-events-none before:transition-all peer-disabled:before:border-transparent after:content[' '] after:block after:flex-grow after:box-border after:w-2.5 after:h-1.5 after:mt-[6.5px] after:ml-1 peer-placeholder-shown:after:border-transparent after:rounded-tr-md after:border-t peer-focus:after:border-t-2 after:border-r peer-focus:after:border-r-2 after:pointer-events-none after:transition-all peer-disabled:after:border-transparent peer-placeholder-shown:leading-[4.1] text-gray-500 peer-focus:text-gray-900 before:border-blue-gray-200 peer-focus:before:!border-gray-900 after:border-blue-gray-200 peer-focus:after:!border-gray-900 before:content-none after:content-none"
            >
            </label>
          </div>
        </div>

        <button
          class="align-middle select-none font-sans font-bold text-center uppercase transition-all disabled:opacity-50 disabled:shadow-none disabled:pointer-events-none text-xs py-3 px-6 rounded-lg bg-gray-900 text-white shadow-md shadow-gray-900/10 hover:shadow-lg hover:shadow-gray-900/20 focus:opacity-[0.85] focus:shadow-none active:opacity-[0.85] active:shadow-none block w-full mt-6"
          data-ripple-light="true"
          type="submit"
        >
          Send code
        </button>
        <div class="flex items-center justify-between gap-2 mt-6">
          <div class="inline-flex items-center"></div>
        </div>
        <div class="space-y-4 mt-8"></div>
      </form>

      <form
        class="mt-8 mb-2 mx-auto w-80 max-w-80 lg:w-1/2"
        hidden
        fd0943-9873-533e-814b-4c1a3ef8611e
      >
        <div class="flex flex-col items-center space-y-4">
          <p class="text-sm text-slate-600 text-center">
            Enter the 6-digit OTP sent to
            <span class="font-bold" id="6-digit"> </span>
          </p>

          <div class="flex items-center space-x-2">
            <input
              type="text"
              maxlength="1"
              class="w-10 h-10 bg-transparent text-center placeholder:text-slate-400 text-slate-700 text-lg border border-slate-200 rounded-md transition duration-300 ease focus:outline-none focus:border-slate-400 hover:border-slate-300 shadow-sm focus:shadow"
            />
            <input
              type="text"
              maxlength="1"
              class="w-10 h-10 bg-transparent text-center placeholder:text-slate-400 text-slate-700 text-lg border border-slate-200 rounded-md transition duration-300 ease focus:outline-none focus:border-slate-400 hover:border-slate-300 shadow-sm focus:shadow"
            />
            <input
              type="text"
              maxlength="1"
              class="w-10 h-10 bg-transparent text-center placeholder:text-slate-400 text-slate-700 text-lg border border-slate-200 rounded-md transition duration-300 ease focus:outline-none focus:border-slate-400 hover:border-slate-300 shadow-sm focus:shadow"
            />
            <span class="text-2xl mx-2 text-slate-700">-</span>
            <input
              type="text"
              maxlength="1"
              class="w-10 h-10 bg-transparent text-center placeholder:text-slate-400 text-slate-700 text-lg border border-slate-200 rounded-md transition duration-300 ease focus:outline-none focus:border-slate-400 hover:border-slate-300 shadow-sm focus:shadow"
            />
            <input
              type="text"
              maxlength="1"
              class="w-10 h-10 bg-transparent text-center placeholder:text-slate-400 text-slate-700 text-lg border border-slate-200 rounded-md transition duration-300 ease focus:outline-none focus:border-slate-400 hover:border-slate-300 shadow-sm focus:shadow"
            />
            <input
              type="text"
              maxlength="1"
              class="w-10 h-10 bg-transparent text-center placeholder:text-slate-400 text-slate-700 text-lg border border-slate-200 rounded-md transition duration-300 ease focus:outline-none focus:border-slate-400 hover:border-slate-300 shadow-sm focus:shadow"
            />
          </div>

          <p class="text-xs text-slate-400 mt-4">
            Did not receive the code?
            <span class="font-bold cursor-pointer" id="Resend">Resend</span>
            or
            <span class="font-bold cursor-pointer" id="Go-Back">Go Back</span>
          </p>
        </div>
        <button
          class="align-middle select-none font-sans font-bold text-center uppercase transition-all disabled:opacity-50 disabled:shadow-none disabled:pointer-events-none text-xs py-3 px-6 rounded-lg bg-gray-900 text-white shadow-md shadow-gray-900/10 hover:shadow-lg hover:shadow-gray-900/20 focus:opacity-[0.85] focus:shadow-none active:opacity-[0.85] active:shadow-none block w-full mt-6"
          data-ripple-light="true"
          type="submit"
        >
          Sign In
        </button>
        <div class="flex items-center justify-between gap-2 mt-6">
          <div class="inline-flex items-center"></div>
        </div>
        <div class="space-y-4 mt-8"></div>
      </form>
    </div>
  </section>
</Layout>

<script>
  const formEmail = document.querySelector(
    "form[eaad0abf-d795-5b43-a8ad-eeb223fd3c20]"
  ) as HTMLFormElement;
  const formOtp = document.querySelector(
    "form[fd0943-9873-533e-814b-4c1a3ef8611e]"
  ) as HTMLFormElement;

  const submitEmail = () => {
    const form = new FormData(formEmail);
    const { email } = Object.fromEntries(form.entries());
    if (email) {
      formEmail.hidden = true;
      formOtp.hidden = false;
      const sixDigit = document.getElementById("6-digit");
      if (sixDigit) sixDigit.textContent = String(email);
      otpInputs[0].focus();
      fetch("/api/send-otp", {
        method: "POST",
        body: JSON.stringify({ email }),
        headers: {
          "Content-Type": "application/json",
        },
      });
    }
  };

  formEmail?.addEventListener("submit", (event) => {
    event.preventDefault();
    submitEmail();
  });

  formOtp?.addEventListener("submit", (event) => {
    event.preventDefault();
    const code: string[] = [];
    otpInputs.forEach((input) => code.push(input.value));

    const form = new FormData(formEmail);
    const { email } = Object.fromEntries(form.entries());

    fetch("/api/verify-otp", {
      method: "POST",
      body: JSON.stringify({ code: code.join(""), email }),
      headers: {
        "Content-Type": "application/json",
      },
    }).then((resp) => {
      if (!resp.ok) {
        otpInputs.forEach((input) => {
          input.value = "";
          input.classList.add("border-red-500");
        });
      }

      window.location.href = "/admin";
    });
  });

  document.querySelector("#Resend")?.addEventListener("click", () => {
    submitEmail();
  });

  document.querySelector("#Go-Back")?.addEventListener("click", () => {
    formEmail.hidden = false;
    formOtp.hidden = true;
  });

  const otpInputs: NodeListOf<HTMLInputElement> =
    document.querySelectorAll('input[type="text"]');

  function handleChange(input: HTMLInputElement, index: number) {
    const value = input.value;
    input.value = value; // Set the value in the current input
    if (value && index < otpInputs.length - 1) {
      otpInputs[index + 1].focus(); // Move to the next input
    }
  }

  function handleBackspace(event: KeyboardEvent, index: number) {
    const input = event.currentTarget as HTMLInputElement;
    if (event.key === "Backspace" && !input.value && index > 0) {
      otpInputs[index - 1].focus(); // Move to the previous input
    }
  }

  otpInputs.forEach((input, index) => {
    input.addEventListener("input", () => handleChange(input, index));
    input.addEventListener("keydown", (event) => handleBackspace(event, index));
    input.addEventListener("paste", (event) => {
      event.preventDefault();
      const clipboardData = event.clipboardData?.getData("text") || "";
      clipboardData.split("").forEach((char, i) => {
        otpInputs[i].value = char;
      });
    });
  });
</script>
